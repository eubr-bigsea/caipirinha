swagger: '2.0'
info:
  title: "Lemonade :: Caipirinha"
  description: 
  termsOfService: http://www.eubra-bigsea.eu/disclaimer-privacy-policy
  contact:
    name: Speed Labs/DCC/UFMG
    url: http://eubra-bigsea.eu
    email: bigsea@dcc.ufmg.br
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0

# the domain of the service
# host: dev.lemonade.org.br
# array of all schemes that your API supports
schemes:
  - http    
  - https
# will be prefixed to all paths
# basePath: /caipirinha
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: X-Auth-Token
    in: header
paths:
  dashboards/{id}:
        
    get: 
      summary: 'Retrieves an instance of Dashboard'
      description: |
        Retrieves an instance of Dashboard by using its identifier.
      tags:
        - /dashboards/{id}
      parameters:
        - name: id
          in: path
          description: ID of Dashboard to fetch
          required: true
          type: integer  
      security:
        - Bearer: []
      responses:
        200:
          description: An array of Dashboard with a single instance.
          schema:
            type: array
            items:
              $ref: '#/definitions/DashboardItemResponseSchema'        
  
    delete:
      summary: 'Removes an instance of Dashboard'
      description: |
        Removes Dashboard identified by {id}.
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: ID of Dashboard to delete
          required: true
          type: integer  
      tags:
        - /dashboards/{id}
      responses:
        204:
          description: Instance was removed with success.
    patch:
      summary: 'Updates an instance of Dashboard'
      description: |
        Updates Dashboard identified by {id}.
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: ID of Dashboard to delete
          required: true
          type: integer  
        - name: dashboard
          in: body
          description: Update
          required: true
          schema:
            $ref: '#/definitions/DashboardCreateRequestSchema'
      tags:
        - /dashboards/{id}
      responses:
        200:
          description: An array of Dashboard with a single instance.
          schema:
            type: array
            items:
              $ref: '#/definitions/DashboardItemResponseSchema'
  /dashboards:
    get:
      summary: 'Retrieves the list of Dashboard'
      description: |
        A The /dashboard endpoint returns informationabout the *Dashboard*. The response includes the display nameand other details about each instance, listing them in the proper display order.
      security:
        - Bearer: []
      parameters:
        - name: only
          in: query
          description: Fields to be selected.
          required: false
          type: string
        - name: page
          in: query
          description: Page number.
          required: false
          type: integer
        - name: size
          in: query
          description: Page size.
          required: false
          type: integer
      tags:
        - /dashboards
      responses:
        200:
          description: An array of Dashboard
          schema:
            type: array
            items:
              $ref: '#/definitions/DashboardItemResponseSchema'
    post:
      summary: 'Creates a new instance of Dashboard'
      description: |
        Creates a new instance of Dashboard
      security:
        - Bearer: []
      parameters:
        - name: dashboard
          in: body
          description: New item to add to the collection
          required: true
          schema:
            $ref: '#/definitions/DashboardCreateRequestSchema'
      tags:
        - /dashboards
      responses:
        200:
          description: Successfuly created the instance
          schema:
            $ref: '#/definitions/DashboardListResponseSchema'
        401:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationErrorSchema'

        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/DefaultErrorSchema'
  /visualizations/{job_id}/{task_id}/{id}:
        
    get: 
      summary: 'Retrieves an instance of Visualization'
      description: |
        Retrieves an instance of Visualization by using its identifier.
      tags:
        - /visualizations/{job_id}/{task_id}/{id}
      parameters:
        - name: id
          in: path
          description: ID of Visualization to fetch
          required: true
          type: integer
        - name: job_id
          in: path
          description: Job id
          required: True
          type: integer
        - name: task_id
          in: path
          description: Task id
          required: True
          type: string  
      security:
        - Bearer: []
      responses:
        200:
          description: An array of Visualization with a single instance.
          schema:
            type: array
            items:
              $ref: '#/definitions/VisualizationItemResponseSchema'        
  
    delete:
      summary: 'Removes an instance of Visualization'
      description: |
        Removes Visualization identified by {id}.
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: ID of Visualization to delete
          required: true
          type: integer
        - name: job_id
          in: path
          description: Job id
          required: True
          type: integer
        - name: task_id
          in: path
          description: Task id
          required: True
          type: string  
      tags:
        - /visualizations/{job_id}/{task_id}/{id}
      responses:
        204:
          description: Instance was removed with success.
    patch:
      summary: 'Updates an instance of Visualization'
      description: |
        Updates Visualization identified by {id}.
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: ID of Visualization to delete
          required: true
          type: integer
        - name: job_id
          in: path
          description: Job id
          required: True
          type: integer
        - name: task_id
          in: path
          description: Task id
          required: True
          type: string  
        - name: visualization
          in: body
          description: Update
          required: true
          schema:
            $ref: '#/definitions/VisualizationCreateRequestSchema'
      tags:
        - /visualizations/{job_id}/{task_id}/{id}
      responses:
        200:
          description: An array of Visualization with a single instance.
          schema:
            type: array
            items:
              $ref: '#/definitions/VisualizationItemResponseSchema'
  /visualizations:
    post:
      summary: 'Creates a new instance of Visualization'
      description: |
        Creates a new instance of Visualization
      security:
        - Bearer: []
      parameters:
        - name: visualization
          in: body
          description: New item to add to the collection
          required: true
          schema:
            $ref: '#/definitions/VisualizationCreateRequestSchema'
      tags:
        - /visualizations
      responses:
        200:
          description: Successfuly created the instance
          schema:
            $ref: '#/definitions/VisualizationListResponseSchema'
        401:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationErrorSchema'

        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/DefaultErrorSchema'
definitions:
  DefaultErrorSchema:
    type: object
    properties:
      status:
        type: string
        description: Result status
      message:
        type: string
        description: Result description
      debug_detail:
        type: string
        description: 'Debug detail (exception), only available with DEBUG mode enabled'
        required: false
  ValidationErrorSchema:
    type: object
    properties:
      status:
        type: string
        description: Result status
      message:
        type: string
        description: Result description
      errors:
        type: array
        description: 'List of validation errors'
        items:
          type: string
  DashboardListResponseSchema:
    type: object
    properties:
      id:
        type: integer
        description: "Dashboard identifier"
      title:
        type: string
        description: "Dashboard title"
        required: true
      created:
        type: string
        description: "Creation date"
        required: true
        format: 'date-time'
      updated:
        type: string
        description: "Updating date and time"
        required: true
        format: 'date-time'
      version:
        type: integer
        description: "Version of workflow"
        required: true
      task_id:
        type: string
        description: "Task that generated this dashboard"
        required: true
      job_id:
        type: integer
        description: "Job that generated this dashboard"
        required: true
      configuration:
        type: string
        description: "Configuraton string for visualizations"
        required: false
      is_public:
        type: boolean
        description: "If dashboard is public or not"
        required: true
      hash:
        type: string
        description: "Hash for public access"
        required: false
  DashboardCreateRequestSchema:
    type: object
    properties:
      title:
        type: string
        description: "Dashboard title"
        required: true
      user_id:
        type: integer
        description: "User id"
        required: true
      user_login:
        type: string
        description: "User login"
        required: true
      user_name:
        type: string
        description: "User name"
        required: true
      workflow_id:
        type: integer
        description: "Workflow id"
        required: true
      workflow_name:
        type: string
        description: "Workflow name"
        required: false
      task_id:
        type: string
        description: "Task that generated this dashboard"
        required: true
      job_id:
        type: integer
        description: "Job that generated this dashboard"
        required: true
      configuration:
        type: string
        description: "Configuraton string for visualizations"
        required: false
      is_public:
        type: boolean
        description: "If dashboard is public or not"
        required: true
      hash:
        type: string
        description: "Hash for public access"
        required: false
      visualizations:
        type: array
        items:
          $ref: '#/definitions/VisualizationCreateRequestSchema'
  DashboardItemResponseSchema:
    type: object
    properties:
      id:
        type: integer
        description: "Dashboard identifier"
      title:
        type: string
        description: "Dashboard title"
        required: true
      created:
        type: string
        description: "Creation date"
        required: true
        format: 'date-time'
      updated:
        type: string
        description: "Updating date and time"
        required: true
        format: 'date-time'
      version:
        type: integer
        description: "Version of workflow"
        required: true
      task_id:
        type: string
        description: "Task that generated this dashboard"
        required: true
      job_id:
        type: integer
        description: "Job that generated this dashboard"
        required: true
      configuration:
        type: string
        description: "Configuraton string for visualizations"
        required: false
      is_public:
        type: boolean
        description: "If dashboard is public or not"
        required: true
      hash:
        type: string
        description: "Hash for public access"
        required: false
      visualizations:
        type: array
        items:
          $ref: '#/definitions/VisualizationItemResponseSchema'
  VisualizationCreateRequestSchema:
    type: object
    properties:
      task_id:
        type: string
        description: "Task that generated this visualization"
        required: true
      title:
        type: string
        description: "Visualization title"
        required: true
      workflow_id:
        type: integer
        description: "Workflow that generated this visualization"
        required: false
      job_id:
        type: integer
        description: "Job that generated this visualization"
        required: false
      suggested_width:
        type: integer
        description: "Suggested width in a grid with 12 cells"
        required: false
      data:
        type: string
        description: "Visualization data"
        required: false
      type:
        type: array
        items:
          $ref: '#/definitions/VisualizationTypeCreateRequestSchema'
  VisualizationListResponseSchema:
    type: object
    properties:
      id:
        type: integer
        description: "Visualization identifier"
      task_id:
        type: string
        description: "Task that generated this visualization"
        required: true
      title:
        type: string
        description: "Visualization title"
        required: true
      workflow_id:
        type: integer
        description: "Workflow that generated this visualization"
        required: false
      job_id:
        type: integer
        description: "Job that generated this visualization"
        required: false
      suggested_width:
        type: integer
        description: "Suggested width in a grid with 12 cells"
        required: false
      data:
        type: string
        description: "Visualization data"
        required: false
      type:
        type: array
        items:
          $ref: '#/definitions/VisualizationTypeListResponseSchema'
  VisualizationItemResponseSchema:
    type: object
    properties:
      id:
        type: integer
        description: "Visualization identifier"
      task_id:
        type: string
        description: "Task that generated this visualization"
        required: true
      title:
        type: string
        description: "Visualization title"
        required: true
      workflow_id:
        type: integer
        description: "Workflow that generated this visualization"
        required: false
      job_id:
        type: integer
        description: "Job that generated this visualization"
        required: false
      suggested_width:
        type: integer
        description: "Suggested width in a grid with 12 cells"
        required: false
      data:
        type: string
        description: "Visualization data"
        required: false
      type:
        type: array
        items:
          $ref: '#/definitions/VisualizationTypeItemResponseSchema'
  VisualizationTypeCreateRequestSchema:
    type: object
    properties:
      id:
        type: integer
        description: "VisualizationType identifier"
      icon:
        type: string
        description: "Visualization icon"
        required: false
  VisualizationTypeItemResponseSchema:
    type: object
    properties:
      id:
        type: integer
        description: "VisualizationType identifier"
      name:
        type: string
        description: "Visualization name"
        required: true
      help:
        type: string
        description: "Visualization help"
        required: true
      icon:
        type: string
        description: "Visualization icon"
        required: false
  VisualizationTypeListResponseSchema:
    type: object
    properties:
      id:
        type: integer
        description: "VisualizationType identifier"
      name:
        type: string
        description: "Visualization name"
        required: true
      help:
        type: string
        description: "Visualization help"
        required: true
      icon:
        type: string
        description: "Visualization icon"
        required: false
